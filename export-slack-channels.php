#!/usr/bin/php
<?php
$tok = 'TOKEN';
$url = "https://slack.com/api/channels.list?token=$tok";
$page = 'it:slack_channels';

/**
 * Decode html entities
 */
function decode($s) {
	return html_entity_decode($s, ENT_QUOTES, 'UTF-8');
}

/**
 * Do custom markup, like eventum issue link -> issue markup
 */
function markup($s) {
	// decode html entities first
	$s = decode($s);

	// use issue markup
	$s = preg_replace('#https://eventum.example.org/view.php\?id=(\d+)#', '[[issue>$1]]', $s);

	// wiki page markup
	$s = preg_replace('#https://wiki.example.org/(\S+)\b#', '[[$1]]', $s);

	// do not allow newlines, use wiki markup
	$s = preg_replace("/\r?\n/", ' \\\\\\\\ ', $s);
	return $s;
}

/**
 * Fetch channels list from slack api
 */
function get_channels_list($url) {
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_HEADER, 0);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_TIMEOUT, 5);
	$res = curl_exec($ch);
	curl_close($ch);
	if (!$res){
		error_log('No response!');
		exit(1);
	}
	$data = json_decode($res);
	if(!$data->ok || $data->ok != true) {
		error_log('Response from API NOT OK: '. var_export($res,1));
		exit(1);
	}
	if(!$data->channels || !count($data->channels)){
		error_log('No channels in response!'. var_export($res,1));
		exit(1);
	}
	return $data;
}

/**
 * Format channels list into dokuwiki syntax
 */
function format_channels_list($data) {
	ob_start();
	printf("\n/* this page is generated by %s, changes will be lost */\n\n", __FILE__);;
	$fmt = ('|%-90s|%-150s|%-52s|' . PHP_EOL);
	$header = sprintf($fmt, 'Channel Name', 'Channel Purpose', 'Channel Topic');
	$header = str_replace("|", "^", $header);
	echo $header;

	foreach($data->channels as $chan) {
		$topic = markup($chan->topic->value);

		printf($fmt,
			'[[https://team.slack.com/messages/' . $chan->name . '|#' . $chan->name . ']]',
			markup($chan->purpose->value), $topic
		);
	}
	$contents = ob_get_clean();
	return $contents;
}

/**
 * commit $contents to $page
 */
function dw_commit($page, $contents, $message) {
	$tmpfile = tempnam(sys_get_temp_dir(), 'sl2dw');
	file_put_contents($tmpfile, $contents);

	$dwpage = '/usr/share/dokuwiki/bin/dwpage.php';
	exec("{$dwpage} commit -m '{$message}' -t {$tmpfile} {$page} 2>&1 | grep -v ^S:");
	unlink($tmpfile);
}

$data = get_channels_list($url);
$contents = format_channels_list($data);
dw_commit($page, $contents, "updated slack channels info");
